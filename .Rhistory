data(data.ma05)
dat <- data.ma05
resp <- dat[, - c(1:2) ]
View(dat)
View(resp)
imp <- mice::mice( resp, method="norm", maxit=3, m=6 )
View(imp)
datlist <- miceadds::mids2datlist( imp )
View(datlist)
Mod_ls <- list()
datlist[[1]]
View(resp)
for(i in dattlist[[i]]){
lm_robust( data=i, formula=denote ~ migrant+ misei,
cluster=dat$idclass )
}
for(i in datlist[[i]]){
lm_robust( data=i, formula=denote ~ migrant+ misei,
cluster=dat$idclass )
}
Mod <- rapply(datlist,
lm_robust(ormula=denote ~ migrant+ misei,
cluster=dat$idclass ),
how='list')
Mod <- rapply(datlist,
lm_robust(formula=denote ~ migrant+ misei,
cluster=dat$idclass ),
how='list')
Mod <- rapply(datlist,
lm_robust(data = datlist, formula=denote ~ migrant+ misei,
cluster=dat$idclass ),
how='list')
data1 <- list(rnorm(100),rnorm(100),rnorm(100))
View(data1)
Mod <- rapply(  datlist, FUN=function(data){
lm_robust( data=data, formula=denote ~ migrant+ misei,
cluster=dat$idclass )
}, how = 'list'  )
Mod <- lapply(  datlist, FUN=function(data){
lm_robust( data=data, formula=denote ~ migrant+ misei,
cluster=dat$idclass )
}, how = 'list'  )
Mod <- lapply(  datlist, FUN=function(data){
lm_robust( data=data, formula=denote ~ migrant+ misei,
cluster=dat$idclass )
})
res <- vector('list', length(datlist))
for(i in seq_along(datlist)){
for(j in seq_along(datlist[[i]])){
res[[i]]<- lm_robust( data=datlist[[i]], formula=denote ~ migrant+ misei,
cluster=dat$idclass )
}
}
View(res)
res <- vector('list', length(datlist))
for(i in seq_along(datlist)){
for(j in seq_along(datlist[[i]])){
res[[i]]<- miceadds::lm.cluster( data=datlist[[i]], formula=denote ~ migrant+ misei,
cluster=dat$idclass )
}
}
res <- vector('list', length(datlist))
for(i in seq_along(datlist)){
for(j in seq_along(datlist[[i]])){
res[[i]]<- lm_robust( data=datlist[[i]], formula=denote ~ migrant+ misei,
cluster=dat$idclass )
}
}
View(res)
rm(res)
res <- vector('list', length(datlist))
for(i in seq_along(datlist)){
for(j in seq_along(datlist[[i]])){
res[[i]]<- miceadds::lm.cluster( data=datlist[[i]], formula=denote ~ migrant+ misei,
cluster=dat$idclass )
}
}
View(res)
class(res)
res[[1]]
res_margins <- vector('list', length(res))
for(i in seq_along(res)){
for(j in seq_along(res[[i]])){
res_margins[[i]] <- margins::margins(res[[i]])
}
}
View(res)
class(res)
View(res_margins)
res_margins <- vector('list', length(res))
for(i in seq_along(res)){
res_margins[[i]] <- margins::margins(res[[i]])
}
for(i in res)){
res_margins[[i]] <- margins::margins(res[[i]])
}
for(i in res){
res_margins[[i]] <- margins::margins(res[[i]])
}
mar_cl <- margins::margins(res[[1]])
res[[1]]
dat <- fabricate(
N = 100,
x = runif(N),
clust = sample(rep(1:20, each = 5)),
y_clust = rnorm(N),
z_clust = cluster_ra(clust),
)
install.packages("estimatr")
library(estimatr)
lmout_cl <- lm_robust(
y_clust ~ z_clust + x,
data = dat,
clusters = clust
)
install.packages("estimatr")
library(estimatr)
lmout_cl <- lm_robust(
y_clust ~ z_clust + x,
data = dat,
clusters = clust
)
lmout_cl
View(res)
res <- vector('list', length(datlist))
for(i in seq_along(datlist)){
for(j in seq_along(datlist[[i]])){
res[[i]]<- lm_robust( data=datlist[[i]], formula=denote ~ migrant+ misei,
cluster=dat$idclass )
}
}
View(res)
mar_cl <- margins::margins(res[[1]])
res_margins <- vector('list', length(res))
for(i in seq_along(res)){
res_margins[[i]] <- margins::margins(res[[i]])
}
View(res_margins)
mar_cl
View(res)
for(i in res){
res_margins[[i]] <- margins::margins(res[[i]])
}
res_margins <- list()
for(i in seq_along(res)){
res_margins[[i]] <- margins::margins(res[[i]])
}
View(res_margins)
for(i in seq_along(res)){
res_margins[[i]] <- margins::marginal_effects(res[[i]])
}
View(res_margins)
margins <- lapply(  res, FUN=function(data){
with(data, margins::marginal_effects(data))
})
View(margins)
res_margins <- list()
for(i in seq_along(res)){
res_margins[[i]] <- margins::marginal_effects(res[[i]])
}
View(res_margins)
View(res_margins)
data(data.ma05)
dat <- data.ma05
resp <- dat[, - c(1:2) ]
imp <- mice::mice( resp, method="norm", maxit=3, m=6 )
datlist <- miceadds::mids2datlist( imp )
library(estimatr)
data(data.ma05)
dat <- data.ma05
resp <- dat[, - c(1:2) ]
imp <- mice::mice( resp, method="norm", maxit=3, m=6 )
datlist <- miceadds::mids2datlist( imp )
mod <- vector('list', length(datlist))
for(i in seq_along(datlist)){
for(j in seq_along(datlist[[i]])){
r[[i]]<- lm_robust( data=datlist[[i]], formula=denote ~ migrant+ misei,
cluster=dat$idclass )
}
}
for(i in seq_along(datlist)){
for(j in seq_along(datlist[[i]])){
mod[[i]]<- lm_robust( data=datlist[[i]], formula=denote ~ migrant+ misei,
cluster=dat$idclass )
}
}
View(mod)
mod_margins <- list()
for(i in seq_along(mod)){
res_margins[[i]] <- margins::marginal_effects(mod[[i]])
}
for(i in seq_along(mod)){
mod_margins[[i]] <- margins::marginal_effects(mod[[i]])
}
View(mod)
View(mod_margins)
mod_margins[[1]]
margins::margins(mod[[1]])
View(mod_margins)
mod_margins
mod
mar_cl <- margins::margins(mod[[1]])
mar_cl
mar_cl <- margins::marginal_effects(mod[[1]])
mar_cl
for(i in seq_along(mod)){
mod_margins[[i]] <- margins::marginals(mod[[i]])
}
for(i in seq_along(mod)){
mod_margins[[i]] <- margins::margins(mod[[i]])
}
View(mod_margins)
mod_margins <- list()
for(i in seq_along(mod)){
mod_margins[[i]] <- margins::marginal_effects(mod[[i]])
}
View(mod_margins)
library(mitools)
library(miceadds)
data(data.ma05)
dat <- data.ma05
summary(dat)
resp <- dat[, - c(1:2) ]
library(mitools)
library(miceadds)
data(data.ma05)
dat <- data.ma05
summary(dat)
library(estimatr)
mod <- vector('list', length(datlist))
for(i in seq_along(datlist)){
for(j in seq_along(datlist[[i]])){
mod[[i]]<- lm_robust( data=datlist[[i]], formula=denote ~ migrant+ misei,
cluster=dat$idclass )
}
}
resp <- dat[, - c(1:2) ]
imp <- mice::mice( resp, method="norm", maxit=3, m=6 )
datlist <- miceadds::mids2datlist( imp )
mod <- vector('list', length(datlist))
for(i in seq_along(datlist)){
for(j in seq_along(datlist[[i]])){
mod[[i]]<- lm_robust( data=datlist[[i]], formula=denote ~ migrant+ misei,
cluster=dat$idclass )
}
}
mar_mod <- lapply(Mod, FUN=function(rr){
with(rr, margins::margins(lm,vcov= vars))
})
library(margins)
for(i in seq_along(mod)){
mod_margins[[i]] <- margins::marginal_effects(mod[[i]])
}
# For single model in `mod`:
mar_cl <- margins::margins(mod[[1]])
mar_cl
summary(mod)
for(i in seq_along(mod)){
mod_margins[[i]] <- margins::marginal_effects(mod[[i]])
}
mod_margins <- list()
for(i in seq_along(mod)){
mod_margins[[i]] <- margins::marginal_effects(mod[[i]])
}
View(mod_margins)
summary(mod_margins)
mod_margins
mod
mod[[1]]$p.value
mod[[]]$p.value
mod_pvs_se <- data.frame()
mod[[1]]$std.error
for(i in seq_along(mod)){
mod_pvs_se$p-value <- mod[[i]]$p.value
mod_pvs_se$SE <- mod[[i]]$std.error
}
for(i in seq_along(mod)){
mod_pvs_se$p_value <- mod[[i]]$p.value
mod_pvs_se$SE <- mod[[i]]$std.error
}
require(data.table)
set.seed(1)
DT1 <- data.table(loc = c("L1","L2"), product = c("P1","P2","P3"), qty = runif(12))
DT2 <- data.table(product = c("P1","P2","P3"), family = c("A","A","B"), price = c(5,7,10))
require(data.table)
set.seed(1)
DT1 <- data.table(loc = c("L1","L2"), product = c("P1","P2","P3"), qty = runif(12))
DT2 <- data.table(product = c("P1","P2","P3"), family = c("A","A","B"), price = c(5,7,10))
View(DT1)
View(DT2)
library(arcgisbinding)
install.packages("arcgisbinding")
install.packages("arcgisbinding")
install.packages("arcgisbinding", repos="http://r-arcgis.github.io/r-bridge")
.libPaths()
system("type R")
file.path(R.home("bin"), "R")
.libPaths()
R.home()
install.packages["rtweet", "tidyverse", "tidytext"]
install.packages("rtweet", "tidyverse", "tidytext")
install.packages(c("rtweet", "tidyverse", "tidytext"))
library(rtweet)
library(tidyverse)
library(tidytext)
API_Key <- "9JDmpjYlbTDelVDjAvC83eJBH"
API_Secret_Key <- "INN7ZWx5hFWVggLmNekXPNVhR9iNXnwhzGZvOwyAJG3Fr4rTsI"
Bearer_Token <- "AAAAAAAAAAAAAAAAAAAAAKnqQQEAAAAANvWhE74DwzQqTyusbSzvbZ1h60o%3DBbYAHh30S6GuUzoRs2GU6vJvwCwnKVmBWQUswgIk6cKTkEOE19"
setup_twitter_oauth(API_Key, API_Secret_Key, Bearer_Token)
install.packages("twitteR")
library(twitteR)
setup_twitter_oauth(API_Key, API_Secret_Key, Bearer_Token)
Access_Token <- "1263742897154818049-dGT6nKdbX8XPCTtRcBIsDVOuKsrcJb"
Access_Token_Secret <-"Vko3wJIuEicPYv552eA7ocomjcxavlsxEiNj0YhMQejVx"
setup_twitter_oauth(API_Key, API_Secret_Key, Access_Token, Access_Token_Secret)
post_tweet(""Tweeting from R in my #rstats #Twitteranalytics research!")
library(rtweet)
post_tweet(""Tweeting from R in my #rstats #Twitteranalytics research!")
post_tweet("Tweeting from R in my #rstats #Twitteranalytics research!")
?searchTwitter
security_info <- searchTwitter('#rape, #murder, #killing, #violence, #robbery,
#theft, #criminal, #fraud, #police, #crime, #protests',
lang = "en",
geocode = '-28.48322,24.676997, 2978km'
n = 2000, since = '2020-01-01', retryOnRateLimit = 1e3)
security_info_data = twListToDF(security_info)
security_info <- searchTwitter('#rape, #murder, #killing, #violence, #robbery,
#theft, #criminal, #fraud, #police, #crime, #protests',
lang = "en",
geocode = '-28.48322,24.676997, 2978km'
n = 2000, since = '2020-01-01', retryOnRateLimit = 1e3)
security_info <- searchTwitter('#rape, #murder, #killing, #violence, #robbery,
#theft, #criminal, #fraud, #police, #crime, #protests',
lang = "en",
geocode = '-28.48322,24.676997, 2978km',
n = 2000, since = '2020-01-01', retryOnRateLimit = 1e3)
tw = twitteR::searchTwitter('#realDonaldTrump + #HillaryClinton', n = 5, since = '2016-11-08', retryOnRateLimit = 1e3)
d = twitteR::twListToDF(tw)
security_info <- searchTwitter('#rape, #murder, #killing, #violence, #robbery,
#theft, #criminal, #fraud, #police, #crime, #protests',
lang = "en",
geocode = '-28.48322,24.676997, 2978km')
listTA <- searchTwitter('#protest')
security_info <- searchTwitter(c('#rape', '#murder', '#killing', '#violence', '#robbery',
'#theft', '#criminal', '#fraud', '#police', '#crime', '#protests'),
lang = "en",
geocode = '-28.48322,24.676997, 2978km',
n = 2000, since = '2020-01-01', retryOnRateLimit = 1e3)
hashtags <- c('#rape', '#murder', '#killing', '#violence', '#robbery',
'#theft', '#criminal', '#fraud', '#police', '#crime', '#protests')
needle <- paste(hashtags, collapse = " OR ")
security_info <- searchTwitter(needle,
lang = "en",
geocode = '-28.48322,24.676997, 2978km',
n = 2000, since = '2020-01-01', retryOnRateLimit = 1e3)
security_info <- searchTwitter(needle,
lang = "en",
geocode = '-28.48322,24.676997, 2978km')
security_info <- searchTwitter(needle,
lang = "en")
security_info_data = twListToDF(security_info)
View(security_info_data)
security_info <- searchTwitter(needle,
lang = "en", n = 1000)
security_info_data = twListToDF(security_info)
View(security_info_data)
security_info <- searchTwitter(needle,
lang = "en", n = 1000,
geocode = lookup_coords("usa"))
security_info <- searchTwitter(needle,
lang = "en", n = 1000)
security_info.df = do.call("rbind",lapply(security_info,as.data.frame))
View(security_info.df)
security_info <- searchTwitter(needle,
lang = "en", n = 1000,
geocode='42.375,-71.1061111,10mi')
security_info_data = twListToDF(security_info)
View(security_info_data)
security_info <- searchTwitter(needle,
lang = "en", n = 25,
geocode='42.375,-71.1061111,10mi')
security_info_data = twListToDF(security_info)
users <- lookupUsers(security_info_data$screenName)
users_df <- twListToDF(users)
table(users_df[, 'location'])
x <- table(users_df[, 'location'])
x <- data.frame(table(users_df[, 'location']))
View(x)
security_info <- searchTwitter(needle,
lang = "en", n = 25,
geocode("London", source = "dsk"))
security_info <- searchTwitter(needle,
lang = "en", n = 25,
geocode = geocode("London", source = "dsk"))
security_info <- search_tweets(hashtags,
n = 1000,
geocode = geocode("London", source = "dsk"),
include_rts = FALSE)
security_info <- search_tweets(hashtags,
n = 1000,
include_rts = FALSE)
security_info <- search_tweets(needle,
n = 1000,
include_rts = FALSE)
View(security_info)
library(stringr)
library(ggmap)
user_info <- lookup_users(unique(security_info$user_id))
str(security_info)
discard(user_info$location, `==`, "") %>%
ggmap::geocode() -> coded
library(RgoogleMaps)
register_google(key = "AIzaSyDLgK2Ld_sClr5PZgBxJYhlfq_4nXCaVzc")
discard(user_info$location, `==`, "") %>%
ggmap::geocode() -> coded
security_info <- search_tweets(needle,
n = 30,
include_rts = FALSE)
user_info <- lookup_users(unique(security_info$user_id))
discard(user_info$location, `==`, "") %>%
ggmap::geocode() -> coded
coded$location <- discard(user_info$location, `==`, "")
user_info <- left_join(user_info, coded, "location")
View(user_info)
View(coded)
security_info <- search_tweets(needle,
n = 100,
include_rts = FALSE,
geocode = lookup_coords("usa"))
security_info <- lat_lng(security_info)
par(mar = c(0, 0, 0, 0))
maps::map("state", lwd = .25)
install.packages('maps')
View(security_info)
par(mar = c(0, 0, 0, 0))
maps::map("state", lwd = .25)
with(security_info, points(lng, lat, pch = 20, cex = .75, col = rgb(0, .3, .7, .75)))
security_info <- search_tweets(needle,
n = 500,
include_rts = FALSE,
geocode = lookup_coords("usa"))
security_info <- lat_lng(security_info)
par(mar = c(0, 0, 0, 0))
maps::map("state", lwd = .25)
with(security_info, points(lng, lat, pch = 20, cex = .75, col = rgb(0, .3, .7, .75)))
library(RgoogleMaps)
library(tidyverse)
library(tidytext)
library(twitteR)
library(stringr)
library(ggplot2)
library(leaflet)
library(rtweet)
library(ggmap)
library(dplyr)
library(maps)
library(sf)
setwd("~/code/R/Twitter-Analysis")
security_info <- read.csv("security_info.csv", header = TRUE, na.strings = "")
security_info <- lat_lng(security_info)
security_info_geo <- lat_lng(security_info) %>%
filter(is.na(lat) == FALSE & is.na(lng) == FALSE)
API_Key <- "9JDmpjYlbTDelVDjAvC83eJBH"
API_Secret_Key <- "INN7ZWx5hFWVggLmNekXPNVhR9iNXnwhzGZvOwyAJG3Fr4rTsI"
Bearer_Token <- "AAAAAAAAAAAAAAAAAAAAAKnqQQEAAAAANvWhE74DwzQqTyusbSzvbZ1h60o%3DBbYAHh30S6GuUzoRs2GU6vJvwCwnKVmBWQUswgIk6cKTkEOE19"
Access_Token <- "1263742897154818049-dGT6nKdbX8XPCTtRcBIsDVOuKsrcJb"
Access_Token_Secret <-"Vko3wJIuEicPYv552eA7ocomjcxavlsxEiNj0YhMQejVx"
setup_twitter_oauth(API_Key, API_Secret_Key, Access_Token, Access_Token_Secret)
hashtags <- c('#rape', '#murder', '#killing', '#violence', '#robbery',
'#theft', '#criminal', '#fraud', '#police', '#crime', '#protests', 'protest',
'#civilunrest', '#burglary', 'war', 'hatecrime', 'criminaljustice', '#murder',
'#serialkiller', '#serialkillers', '#justice', '#death', '#terrorism', '#terrorist',
'#terroristattack', '#violence', '#isis')
needle <- paste(hashtagsud, collapse = " OR ")
security_info <- search_tweets(needle,
n = 50000,
include_rts = FALSE,
geocode = lookup_coords("usa"),
retryonratelimit = TRUE)
library(RgoogleMaps)
library(tidyverse)
library(tidytext)
library(twitteR)
library(stringr)
library(ggplot2)
library(leaflet)
library(rtweet)
library(ggmap)
library(dplyr)
library(maps)
library(sf)
hashtags <- c('#rape', '#murder', '#killing', '#violence', '#robbery',
'#theft', '#criminal', '#fraud', '#police', '#crime', '#protests', 'protest',
'#civilunrest', '#burglary', 'war', 'hatecrime', 'criminaljustice', '#murder',
'#serialkiller', '#serialkillers', '#justice', '#death', '#terrorism', '#terrorist',
'#terroristattack', '#violence', '#isis')
needle <- paste(hashtags, collapse = " OR ")
security_info <- search_tweets(needle,
n = 50000,
include_rts = FALSE,
geocode = lookup_coords("usa"),
retryonratelimit = TRUE)
security_info <- lat_lng(security_info)
security_info_geo <- lat_lng(security_info) %>%
filter(is.na(lat) == FALSE & is.na(lng) == FALSE)
security_info_geo.sf <- st_as_sf(security_info_geo , coords = c("lng", "lat"), crs = "+proj=longlat +datum=WGS84 +ellps=WGS84")
leaflet() %>%
addProviderTiles("OpenStreetMap.Mapnik") %>%
addCircles(data = security_info_geo.sf,
color = "blue")
st_crs(la.metro) == st_crs(security_info_geo.sf)
la.metro <-st_transform(la.metro, crs = st_crs(security_info_geo.sf))
